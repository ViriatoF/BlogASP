@model MyBlog.Models.Commentaire
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework;
@using MyBlog.Models

@{
    var user = User.Identity;
    ApplicationDbContext context = new ApplicationDbContext();
    var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(context));
    var UserMail = userManager.GetEmail(user.GetUserId()).ToString();
    var userName = User.Identity.GetUserName().ToString();
}

@using (Html.BeginForm("_Create", "Commentaire", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @*@Html.HiddenFor(model => model.Publication)
    @Html.HiddenFor(model => model.Pseudo)*@
    @Html.HiddenFor(model => model.Email)

    <div class="form-inline">
        <h4>Commentaires</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
                @Html.LabelFor(model => model.Pseudo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Pseudo", userName, htmlAttributes: new { @class = "form-control",  @readonly = "read-only" })
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contenu, new { htmlAttributes = new { @class = "form-control", placeholder ="Tapez votre message ici", col= 500 } })
                @Html.ValidationMessageFor(model => model.Contenu, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Create" class="btn btn-primary"><i class="glyphicon glyphicon-ok"></i>  Valider</button>
            </div>
        </div>
    </div>
}

